{"ast":null,"code":"var _jsxFileName = \"/home/shkwon/Projects/Learn_Ethereum/chapter10/DigitalArtERC721Token/dapp/src/MyWallet.js\";\nimport React from 'react';\nimport './App.css';\nimport AppNav from \"./AppNav\";\nimport { getWeb3, getInstance } from \"./Web3Util\";\n/**\n * @App Build Decentralized Art Market using ERC-721\n * @Util my digial art wallet\n * @Book Learn Ethereum \n * @author brian wu\n */\n\nclass MyWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const web3 = await getWeb3();\n      window.web3 = web3;\n      const contractInstance = await getInstance(web3);\n      window.user = (await web3.eth.getAccounts())[0];\n      const balanceInWei = await web3.eth.getBalance(window.user);\n      var balance = web3.utils.fromWei(balanceInWei, 'ether');\n      const networkId = await web3.eth.net.getId();\n      const networkType = await web3.eth.net.getNetworkType();\n      this.setState({\n        user: window.user\n      });\n      this.setState({\n        balance: balance\n      });\n      this.setState({\n        contractInstance: contractInstance\n      });\n      this.setState({\n        networkId: networkId\n      });\n      this.setState({\n        networkType: networkType\n      });\n      await this.loadMyDigitalArts(web3);\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, function () {});\n    };\n\n    this.state = {\n      hasData: false,\n      message: \"\",\n      rows: [],\n      columns: [],\n      tokenIds: [],\n      title: [],\n      desc: [],\n      price: [],\n      publishDate: [],\n      author: [],\n      image: [],\n      status: [],\n      total: 0,\n      user: '',\n      balance: 0,\n      contractInstance: '',\n      networkId: '',\n      networkType: '',\n      sellTokenId: '',\n      sellPrice: 0,\n      showModal: false\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n\n  resetPendingArts() {\n    this.setState({\n      tokenIds: [],\n      title: [],\n      desc: [],\n      price: [],\n      publishDate: [],\n      author: [],\n      image: [],\n      status: [],\n      total: 0\n    });\n  }\n\n  async loadMyDigitalArts(web3) {\n    try {\n      let ids;\n      const result = await this.state.contractInstance.methods.findMyArts().call();\n      let _total = result.length;\n\n      if (_total > 0) {\n        let row;\n\n        if (_total <= 3) {\n          row = 1;\n        } else {\n          row = Math.ceil(_total / 3);\n        }\n\n        let columns = 3;\n        let rowArr = Array.apply(null, {\n          length: row\n        }).map(Number.call, Number);\n        let colArr = Array.apply(null, {\n          length: columns\n        }).map(Number.call, Number);\n        this.setState({\n          rows: rowArr,\n          columns: colArr\n        });\n        let _tokenIds = [],\n            _title = [],\n            _desc = [],\n            _price = [],\n            _publishDate = [],\n            _image = [],\n            _author = [],\n            _status = [];\n        let idx = 0;\n        this.resetPendingArts();\n\n        for (let i = 0; i < row; i++) {\n          for (let j = 0; j < columns; j++) {\n            if (idx < _total) {\n              let tokenId = result[idx];\n              const art = await this.state.contractInstance.methods.findArt(tokenId).call();\n              const priceInEther = web3.utils.fromWei(art[3], 'ether');\n\n              _tokenIds.push(art[0]);\n\n              _title.push(art[1]);\n\n              _desc.push(art[2]);\n\n              if (art[4] == 1) {\n                _status.push(\"In selling\");\n              } else {\n                _status.push(\"Publish\");\n              }\n\n              _price.push(priceInEther);\n\n              _publishDate.push(art[5]);\n\n              _image.push(art[9]);\n\n              _author.push(art[6]);\n            }\n\n            idx++;\n          }\n        }\n\n        this.setState({\n          tokenIds: _tokenIds,\n          title: _title,\n          desc: _desc,\n          price: _price,\n          publishDate: _publishDate,\n          author: _author,\n          status: _status,\n          image: _image,\n          total: _total\n        });\n        this.setState({\n          hasData: true\n        });\n      } else {\n        this.setState({\n          hasData: false\n        });\n      }\n    } catch (e) {\n      console.log('Error', e);\n    }\n  }\n\n  sellArt(tokenId) {\n    try {\n      //open  popup window\n      this.setState({\n        sellTokenId: tokenId,\n        showModal: true\n      });\n    } catch (e) {\n      console.log('Error', e);\n    }\n  }\n\n  async submitArtSell() {\n    try {\n      const priceInWei = window.web3.utils.toWei(this.state.sellPrice, 'ether');\n      await this.state.contractInstance.methods.resellArt(this.state.sellTokenId, priceInWei).send({\n        from: this.state.user,\n        gas: 6000000\n      });\n      window.location.reload();\n    } catch (e) {\n      console.log('Error', e);\n    }\n  }\n\n  render() {\n    if (this.state.hasData) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(AppNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mb-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-8 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"My Address:\"), \" \", this.state.user), React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"NetworkId:\"), \" \", this.state.networkId)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Balance:\"), \" \", this.state.balance, \" (ether)\"), React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"NetworkType:\"), \" \", this.state.networkType))))), React.createElement(\"div\", {\n        className: \"col-md-2 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"h5\", {\n        className: \"h5-responsive font-weight-bold text-center my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"My Wallet Arts\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.rows.map((row, i) => React.createElement(\"div\", {\n        className: \"row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.columns.map((col, j) => React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-12 mb-lg-0 mb-0\",\n        key: j,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, i * 3 + j < this.state.total && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"view overlay rounded z-depth-3 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid\",\n        src: this.state.image[i * 3 + j],\n        alt: \"Sample\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"h6\", {\n        className: \"pink-text font-weight-bold mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-map pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"font-weight-bold orange-text deep-orange-lighter-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"TokenId: \", this.state.tokenIds[i * 3 + j]), React.createElement(\"h5\", {\n        className: \"font-weight-bold mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Title: \", this.state.title[i * 3 + j]), React.createElement(\"div\", {\n        className: \"dark-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.state.price[i * 3 + j], \" (ether)\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"by \", React.createElement(\"span\", {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.author[i * 3 + j]), \", \", this.state.publishDate[i * 3 + j]), React.createElement(\"p\", {\n        className: \"alert alert-primary dark-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.desc[i * 3 + j]), this.state.status[i * 3 + j] === 'Publish' && React.createElement(\"button\", {\n        className: \"btn btn-pink btn-rounded btn-md\",\n        \"data-toggle\": \"modal\",\n        onClick: e => (e.preventDefault(), this.sellArt(this.state.tokenIds[i * 3 + j])),\n        \"data-target\": \".sell-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.status[i * 3 + j]))))))), React.createElement(\"div\", {\n        className: \"modal fade sell-modal \".concat(this.props.showModal ? 'show' : ''),\n        id: \"submitModal\",\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"submitModalLabel\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        id: \"myLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Sell Art\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control mb-4\",\n        id: \"sellPrice\",\n        name: \"sellPrice\",\n        type: \"text\",\n        placeholder: \"Price (ether)\",\n        onChange: this.changeHandler,\n        value: this.state.sellPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-dismiss\": \"modal\",\n        onClick: e => (e.preventDefault(), this.submitArtSell()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Submit\")))))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(AppNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mb-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-8 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"My Address:\"), \" \", this.state.user), React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"NetworkId:\"), \" \", this.state.networkId)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Balance:\"), \" \", this.state.balance, \" (ether)\"), React.createElement(\"div\", {\n        className: \"col-md-6 mb-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-weight-bold blue-grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"NetworkType:\"), \" \", this.state.networkType))))), React.createElement(\"div\", {\n        className: \"col-md-2 mb-md-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default MyWallet;","map":{"version":3,"sources":["/home/shkwon/Projects/Learn_Ethereum/chapter10/DigitalArtERC721Token/dapp/src/MyWallet.js"],"names":["React","AppNav","getWeb3","getInstance","MyWallet","Component","constructor","props","componentDidMount","web3","window","contractInstance","user","eth","getAccounts","balanceInWei","getBalance","balance","utils","fromWei","networkId","net","getId","networkType","getNetworkType","setState","loadMyDigitalArts","changeHandler","event","target","name","value","state","hasData","message","rows","columns","tokenIds","title","desc","price","publishDate","author","image","status","total","sellTokenId","sellPrice","showModal","bind","resetPendingArts","ids","result","methods","findMyArts","call","_total","length","row","Math","ceil","rowArr","Array","apply","map","Number","colArr","_tokenIds","_title","_desc","_price","_publishDate","_image","_author","_status","idx","i","j","tokenId","art","findArt","priceInEther","push","e","console","log","sellArt","submitArtSell","priceInWei","toWei","resellArt","send","from","gas","location","reload","render","col","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport AppNav from \"./AppNav\";\nimport { getWeb3, getInstance}  from \"./Web3Util\";\n/**\n * @App Build Decentralized Art Market using ERC-721\n * @Util my digial art wallet\n * @Book Learn Ethereum \n * @author brian wu\n */\nclass MyWallet extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasData: false,\n      message: \"\",\n      rows:[],\n      columns: [],\n      tokenIds: [],\n      title: [],\n      desc: [],\n      price: [],\n      publishDate: [],\n      author: [],\n      image: [],\n      status:[],\n      total: 0,\n      user: '',\n      balance: 0,\n      contractInstance: '',\n      networkId:'',\n      networkType:'',\n      sellTokenId: '',\n      sellPrice:0,\n      showModal: false\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n  resetPendingArts() {\n    this.setState({ \n      tokenIds: [],\n      title: [],\n      desc: [],\n      price: [],\n      publishDate: [],\n      author: [],\n      image: [],\n      status:[],\n      total: 0\n    });\n  }\n  componentDidMount = async () => {\n    const web3 = await getWeb3();\n    window.web3 = web3;\n    const contractInstance = await getInstance(web3);\n    window.user = (await web3.eth.getAccounts())[0];\n    const balanceInWei = await web3.eth.getBalance(window.user);\n    var balance = web3.utils.fromWei(balanceInWei, 'ether');\n    const networkId = await web3.eth.net.getId();\n    const networkType = await web3.eth.net.getNetworkType();\n    this.setState({ user: window.user });\n    this.setState({ balance: balance});\n    this.setState({ contractInstance: contractInstance });\n    this.setState({ networkId: networkId});\n    this.setState({ networkType: networkType});\n    await this.loadMyDigitalArts(web3);\n\n  }\n  async loadMyDigitalArts(web3) {\n      try {\n        let ids;\n        const result = await this.state.contractInstance.methods.findMyArts().call();\n        let _total = result.length;\n        if(_total>0) {\n          let row;\n          if(_total<=3) {\n            row = 1;\n          } else {\n            row = Math.ceil(_total/3);\n          }\n          let columns = 3;\n          let rowArr = Array.apply(null, {length: row}).map(Number.call, Number);\n          let colArr = Array.apply(null, {length: columns}).map(Number.call, Number);\n          this.setState({ rows: rowArr, columns: colArr });\n          let _tokenIds= [], _title =[],  _desc= [], _price= [], _publishDate= [],  _image =[], _author=[], _status=[];\n          let idx =0;\n          this.resetPendingArts();\n          for(let i = 0; i<row; i++) {\n            for(let j = 0; j < columns; j++) {\n               if(idx<_total) {\n                 let tokenId= result[idx];\n                 const art = await this.state.contractInstance.methods.findArt(tokenId).call();\n                 const priceInEther = web3.utils.fromWei(art[3], 'ether');\n                 _tokenIds.push(art[0]);\n                 _title.push(art[1]);\n                 _desc.push(art[2]);\n                 if(art[4]==1) {\n                    _status.push(\"In selling\");\n                 } else {\n                    _status.push(\"Publish\");\n                 }\n                \n                 _price.push(priceInEther);\n                 _publishDate.push(art[5]);\n                 _image.push(art[9]);\n                 _author.push(art[6]);\n               }\n              idx++;\n            }\n        }\n         \n          this.setState({ \n            tokenIds: _tokenIds,\n            title: _title,\n            desc: _desc,\n            price: _price,\n            publishDate: _publishDate,\n            author: _author,\n            status: _status,\n            image: _image,\n            total: _total\n          });\n          this.setState({ hasData: true });\n        } else {\n          this.setState({ hasData: false });\n        }\n \n    } catch (e) {console.log('Error', e)}\n  \n  }\n  changeHandler = event => {\n    this.setState({\n        [event.target.name]: event.target.value\n        }, function(){ })\n   };\n   sellArt(tokenId) {\n    try {\n      //open  popup window\n      this.setState({ sellTokenId: tokenId, showModal: true });\n    } catch (e) {console.log('Error', e)}\n  };\n  async submitArtSell() {\n    try {\n      const priceInWei =  window.web3.utils.toWei(this.state.sellPrice, 'ether');\n       await this.state.contractInstance.methods.resellArt(this.state.sellTokenId, priceInWei).send({\n           from: this.state.user, gas: 6000000\n       })\n      window.location.reload(); \n    } catch (e) {console.log('Error', e)}\n  };\n  render() {\n    if (this.state.hasData) {\n      return (\n        <div className=\"App\">\n          <AppNav></AppNav>\n          <section className=\"text-center\">\n            <div className=\"row mb-3 mt-3\">\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\n                        <div className=\"card\">\n                            <div className=\"card-body \">\n                              <div className=\"row\">\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\n                                </div>\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkId:</span> {this.state.networkId}\n                                </div>\n                              </div>\n                              <div className=\"row\">\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} (ether)\n                                </div>\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkType:</span> {this.state.networkType}\n                                </div>\n                              </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\n                </div>\n            <h5 className=\"h5-responsive font-weight-bold text-center my-3\">My Wallet Arts</h5>\n            <div className=\"container\">\n               {this.state.rows.map((row, i) =>\n                <div className=\"row\" key={i}>\n                  {this.state.columns.map((col, j) =>\n                    <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\" key={j}>\n                        { i*3+j < this.state.total &&\n                            <div>\n                            <div className=\"view overlay rounded z-depth-3 mb-2\">\n                              <img className=\"img-fluid\" src={this.state.image[i*3+j]} alt=\"Sample\"/>\n                            </div>\n                            <h6 className=\"pink-text font-weight-bold mb-1\"><i className=\"fas fa-map pr-2\"></i></h6>\n                            <div className=\"font-weight-bold orange-text deep-orange-lighter-hover\">TokenId: {this.state.tokenIds[i*3+j]}</div>\n                            <h5 className=\"font-weight-bold mb-1\">Title: {this.state.title[i*3+j]}</h5>\n                            <div className=\"dark-grey-text\">{this.state.price[i*3+j]} (ether)</div>\n                            <p>by <span className=\"font-weight-bold\">{this.state.author[i*3+j]}</span>, {this.state.publishDate[i*3+j]}</p>\n                            \n                            <p className=\"alert alert-primary dark-grey-text\">{this.state.desc[i*3+j]}</p>\n                            { this.state.status[i*3+j]==='Publish' &&\n                                <button className=\"btn btn-pink btn-rounded btn-md\" data-toggle=\"modal\" onClick={e => (e.preventDefault(),this.sellArt(this.state.tokenIds[i*3+j]))} data-target=\".sell-modal\" >{this.state.status[i*3+j]}</button>\n                            }\n                           \n                        </div>\n                        }\n                    </div>\n\n                  )}\n                </div>\n              )}\n              </div>\n              <div className={`modal fade sell-modal ${this.props.showModal ? 'show' : ''}`} id=\"submitModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"submitModalLabel\"  aria-hidden=\"true\">\n                  <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"myLabel\">Sell Art</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                      </div>\n                      <div className=\"modal-body\">\n                          <input className=\"form-control mb-4\" id=\"sellPrice\" name=\"sellPrice\"  type=\"text\" placeholder=\"Price (ether)\"  onChange={this.changeHandler}  value={this.state.sellPrice}/>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => (e.preventDefault(),this.submitArtSell())}>Submit</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n          </section>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <AppNav></AppNav>\n          <section className=\"text-center\">\n          <div className=\"row mb-3 mt-3\">\n                <div className=\"col-md-2 mb-md-0 mb-1\"></div>\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\n                        <div className=\"card\">\n                            <div className=\"card-body \">\n                              <div className=\"row\">\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\n                                </div>\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkId:</span> {this.state.networkId}\n                                </div>\n                              </div>\n                              <div className=\"row\">\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} (ether)\n                                </div>\n                                <div className=\"col-md-6 mb-md-0\">\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkType:</span> {this.state.networkType}\n                                </div>\n                              </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\n                </div>\n\n          </section>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default MyWallet;\n"]},"metadata":{},"sourceType":"module"}