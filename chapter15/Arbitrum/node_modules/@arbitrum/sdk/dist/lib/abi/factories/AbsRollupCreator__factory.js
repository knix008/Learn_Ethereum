"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbsRollupCreator__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rollupAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "inboxAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "outbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "rollupEventInbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "challengeManager",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "adminProxy",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "sequencerInbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "bridge",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "validatorUtils",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "validatorWalletCreator",
                type: "address",
            },
        ],
        name: "RollupCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "TemplatesUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "bridgeCreator",
        outputs: [
            {
                internalType: "contract IBridgeCreator",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "challengeManagerTemplate",
        outputs: [
            {
                internalType: "contract IChallengeManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "osp",
        outputs: [
            {
                internalType: "contract IOneStepProofEntry",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupAdminLogic",
        outputs: [
            {
                internalType: "contract IRollupAdmin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupUserLogic",
        outputs: [
            {
                internalType: "contract IRollupUser",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IBridgeCreator",
                name: "_bridgeCreator",
                type: "address",
            },
            {
                internalType: "contract IOneStepProofEntry",
                name: "_osp",
                type: "address",
            },
            {
                internalType: "contract IChallengeManager",
                name: "_challengeManagerLogic",
                type: "address",
            },
            {
                internalType: "contract IRollupAdmin",
                name: "_rollupAdminLogic",
                type: "address",
            },
            {
                internalType: "contract IRollupUser",
                name: "_rollupUserLogic",
                type: "address",
            },
            {
                internalType: "address",
                name: "_validatorUtils",
                type: "address",
            },
            {
                internalType: "address",
                name: "_validatorWalletCreator",
                type: "address",
            },
        ],
        name: "setTemplates",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorUtils",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorWalletCreator",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class AbsRollupCreator__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AbsRollupCreator__factory = AbsRollupCreator__factory;
AbsRollupCreator__factory.abi = _abi;
