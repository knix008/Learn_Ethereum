import { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";
export interface ArbBLSInterface extends utils.Interface {
    contractName: "ArbBLS";
    functions: {
        "getAltBN128(address)": FunctionFragment;
        "getBLS12381(address)": FunctionFragment;
        "getPublicKey(address)": FunctionFragment;
        "register(uint256,uint256,uint256,uint256)": FunctionFragment;
        "registerAltBN128(uint256,uint256,uint256,uint256)": FunctionFragment;
        "registerBLS12381(bytes)": FunctionFragment;
    };
    encodeFunctionData(functionFragment: "getAltBN128", values: [string]): string;
    encodeFunctionData(functionFragment: "getBLS12381", values: [string]): string;
    encodeFunctionData(functionFragment: "getPublicKey", values: [string]): string;
    encodeFunctionData(functionFragment: "register", values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: "registerAltBN128", values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: "registerBLS12381", values: [BytesLike]): string;
    decodeFunctionResult(functionFragment: "getAltBN128", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getBLS12381", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getPublicKey", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "register", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "registerAltBN128", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "registerBLS12381", data: BytesLike): Result;
    events: {};
}
export interface ArbBLS extends BaseContract {
    contractName: "ArbBLS";
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: ArbBLSInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        getAltBN128(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
        getBLS12381(addr: string, overrides?: CallOverrides): Promise<[string]>;
        getPublicKey(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
        register(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
        registerAltBN128(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
        registerBLS12381(key: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
    };
    getAltBN128(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
    getBLS12381(addr: string, overrides?: CallOverrides): Promise<string>;
    getPublicKey(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
    register(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    registerAltBN128(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    registerBLS12381(key: BytesLike, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    callStatic: {
        getAltBN128(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
        getBLS12381(addr: string, overrides?: CallOverrides): Promise<string>;
        getPublicKey(addr: string, overrides?: CallOverrides): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;
        register(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: CallOverrides): Promise<void>;
        registerAltBN128(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: CallOverrides): Promise<void>;
        registerBLS12381(key: BytesLike, overrides?: CallOverrides): Promise<void>;
    };
    filters: {};
    estimateGas: {
        getAltBN128(addr: string, overrides?: CallOverrides): Promise<BigNumber>;
        getBLS12381(addr: string, overrides?: CallOverrides): Promise<BigNumber>;
        getPublicKey(addr: string, overrides?: CallOverrides): Promise<BigNumber>;
        register(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
        registerAltBN128(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
        registerBLS12381(key: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        getAltBN128(addr: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getBLS12381(addr: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getPublicKey(addr: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        register(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
        registerAltBN128(x0: BigNumberish, x1: BigNumberish, y0: BigNumberish, y1: BigNumberish, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
        registerBLS12381(key: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
    };
}
