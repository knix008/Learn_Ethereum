"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbsBridgeCreator__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "TemplatesUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "bridgeTemplate",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "inboxTemplate",
        outputs: [
            {
                internalType: "contract IInboxBase",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "outboxTemplate",
        outputs: [
            {
                internalType: "contract Outbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupEventInboxTemplate",
        outputs: [
            {
                internalType: "contract IRollupEventInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerInboxTemplate",
        outputs: [
            {
                internalType: "contract SequencerInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_bridgeTemplate",
                type: "address",
            },
            {
                internalType: "address",
                name: "_sequencerInboxTemplate",
                type: "address",
            },
            {
                internalType: "address",
                name: "_inboxTemplate",
                type: "address",
            },
            {
                internalType: "address",
                name: "_rollupEventInboxTemplate",
                type: "address",
            },
            {
                internalType: "address",
                name: "_outboxTemplate",
                type: "address",
            },
        ],
        name: "updateTemplates",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class AbsBridgeCreator__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AbsBridgeCreator__factory = AbsBridgeCreator__factory;
AbsBridgeCreator__factory.abi = _abi;
