"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "impl_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b5060405161011d38038061011d83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051609561008860003960006017015260956000f3fe608060405236601057600e6013565b005b600e5b603a7f0000000000000000000000000000000000000000000000000000000000000000603c565b565b3660008037600080366000845af43d6000803e808015605a573d6000f35b3d6000fdfea26469706673582212207509cd70dccdfb4f725f4b8ea78e709940520b3ba4ea15a2b4b4870a7a3152ab64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class SimpleProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "SimpleProxy";
    }
    deploy(impl_, overrides) {
        return super.deploy(impl_, overrides || {});
    }
    getDeployTransaction(impl_, overrides) {
        return super.getDeployTransaction(impl_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SimpleProxy__factory = SimpleProxy__factory;
SimpleProxy__factory.bytecode = _bytecode;
SimpleProxy__factory.abi = _abi;
