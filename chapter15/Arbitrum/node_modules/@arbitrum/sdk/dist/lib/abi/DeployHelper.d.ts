import { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, PayableOverrides, PopulatedTransaction, Signer, utils } from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";
export interface DeployHelperInterface extends utils.Interface {
    contractName: "DeployHelper";
    functions: {
        "ERC1820_DEPLOYER()": FunctionFragment;
        "ERC1820_PAYLOAD()": FunctionFragment;
        "ERC1820_VALUE()": FunctionFragment;
        "ERC2470_DEPLOYER()": FunctionFragment;
        "ERC2470_PAYLOAD()": FunctionFragment;
        "ERC2470_VALUE()": FunctionFragment;
        "NICK_CREATE2_DEPLOYER()": FunctionFragment;
        "NICK_CREATE2_PAYLOAD()": FunctionFragment;
        "NICK_CREATE2_VALUE()": FunctionFragment;
        "ZOLTU_CREATE2_DEPLOYER()": FunctionFragment;
        "ZOLTU_CREATE2_PAYLOAD()": FunctionFragment;
        "ZOLTU_VALUE()": FunctionFragment;
        "getDeploymentTotalCost(address,uint256)": FunctionFragment;
        "perform(address,address,uint256)": FunctionFragment;
    };
    encodeFunctionData(functionFragment: "ERC1820_DEPLOYER", values?: undefined): string;
    encodeFunctionData(functionFragment: "ERC1820_PAYLOAD", values?: undefined): string;
    encodeFunctionData(functionFragment: "ERC1820_VALUE", values?: undefined): string;
    encodeFunctionData(functionFragment: "ERC2470_DEPLOYER", values?: undefined): string;
    encodeFunctionData(functionFragment: "ERC2470_PAYLOAD", values?: undefined): string;
    encodeFunctionData(functionFragment: "ERC2470_VALUE", values?: undefined): string;
    encodeFunctionData(functionFragment: "NICK_CREATE2_DEPLOYER", values?: undefined): string;
    encodeFunctionData(functionFragment: "NICK_CREATE2_PAYLOAD", values?: undefined): string;
    encodeFunctionData(functionFragment: "NICK_CREATE2_VALUE", values?: undefined): string;
    encodeFunctionData(functionFragment: "ZOLTU_CREATE2_DEPLOYER", values?: undefined): string;
    encodeFunctionData(functionFragment: "ZOLTU_CREATE2_PAYLOAD", values?: undefined): string;
    encodeFunctionData(functionFragment: "ZOLTU_VALUE", values?: undefined): string;
    encodeFunctionData(functionFragment: "getDeploymentTotalCost", values: [string, BigNumberish]): string;
    encodeFunctionData(functionFragment: "perform", values: [string, string, BigNumberish]): string;
    decodeFunctionResult(functionFragment: "ERC1820_DEPLOYER", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ERC1820_PAYLOAD", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ERC1820_VALUE", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ERC2470_DEPLOYER", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ERC2470_PAYLOAD", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ERC2470_VALUE", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "NICK_CREATE2_DEPLOYER", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "NICK_CREATE2_PAYLOAD", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "NICK_CREATE2_VALUE", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ZOLTU_CREATE2_DEPLOYER", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ZOLTU_CREATE2_PAYLOAD", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "ZOLTU_VALUE", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDeploymentTotalCost", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "perform", data: BytesLike): Result;
    events: {};
}
export interface DeployHelper extends BaseContract {
    contractName: "DeployHelper";
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: DeployHelperInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        ERC1820_DEPLOYER(overrides?: CallOverrides): Promise<[string]>;
        ERC1820_PAYLOAD(overrides?: CallOverrides): Promise<[string]>;
        ERC1820_VALUE(overrides?: CallOverrides): Promise<[BigNumber]>;
        ERC2470_DEPLOYER(overrides?: CallOverrides): Promise<[string]>;
        ERC2470_PAYLOAD(overrides?: CallOverrides): Promise<[string]>;
        ERC2470_VALUE(overrides?: CallOverrides): Promise<[BigNumber]>;
        NICK_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<[string]>;
        NICK_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<[string]>;
        NICK_CREATE2_VALUE(overrides?: CallOverrides): Promise<[BigNumber]>;
        ZOLTU_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<[string]>;
        ZOLTU_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<[string]>;
        ZOLTU_VALUE(overrides?: CallOverrides): Promise<[BigNumber]>;
        getDeploymentTotalCost(inbox: string, maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber]>;
        perform(_inbox: string, _nativeToken: string, _maxFeePerGas: BigNumberish, overrides?: PayableOverrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
    };
    ERC1820_DEPLOYER(overrides?: CallOverrides): Promise<string>;
    ERC1820_PAYLOAD(overrides?: CallOverrides): Promise<string>;
    ERC1820_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
    ERC2470_DEPLOYER(overrides?: CallOverrides): Promise<string>;
    ERC2470_PAYLOAD(overrides?: CallOverrides): Promise<string>;
    ERC2470_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
    NICK_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<string>;
    NICK_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<string>;
    NICK_CREATE2_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
    ZOLTU_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<string>;
    ZOLTU_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<string>;
    ZOLTU_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
    getDeploymentTotalCost(inbox: string, maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
    perform(_inbox: string, _nativeToken: string, _maxFeePerGas: BigNumberish, overrides?: PayableOverrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    callStatic: {
        ERC1820_DEPLOYER(overrides?: CallOverrides): Promise<string>;
        ERC1820_PAYLOAD(overrides?: CallOverrides): Promise<string>;
        ERC1820_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        ERC2470_DEPLOYER(overrides?: CallOverrides): Promise<string>;
        ERC2470_PAYLOAD(overrides?: CallOverrides): Promise<string>;
        ERC2470_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        NICK_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<string>;
        NICK_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<string>;
        NICK_CREATE2_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        ZOLTU_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<string>;
        ZOLTU_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<string>;
        ZOLTU_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        getDeploymentTotalCost(inbox: string, maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        perform(_inbox: string, _nativeToken: string, _maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<void>;
    };
    filters: {};
    estimateGas: {
        ERC1820_DEPLOYER(overrides?: CallOverrides): Promise<BigNumber>;
        ERC1820_PAYLOAD(overrides?: CallOverrides): Promise<BigNumber>;
        ERC1820_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        ERC2470_DEPLOYER(overrides?: CallOverrides): Promise<BigNumber>;
        ERC2470_PAYLOAD(overrides?: CallOverrides): Promise<BigNumber>;
        ERC2470_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        NICK_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<BigNumber>;
        NICK_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<BigNumber>;
        NICK_CREATE2_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        ZOLTU_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<BigNumber>;
        ZOLTU_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<BigNumber>;
        ZOLTU_VALUE(overrides?: CallOverrides): Promise<BigNumber>;
        getDeploymentTotalCost(inbox: string, maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        perform(_inbox: string, _nativeToken: string, _maxFeePerGas: BigNumberish, overrides?: PayableOverrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        ERC1820_DEPLOYER(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ERC1820_PAYLOAD(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ERC1820_VALUE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ERC2470_DEPLOYER(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ERC2470_PAYLOAD(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ERC2470_VALUE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        NICK_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        NICK_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        NICK_CREATE2_VALUE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ZOLTU_CREATE2_DEPLOYER(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ZOLTU_CREATE2_PAYLOAD(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        ZOLTU_VALUE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getDeploymentTotalCost(inbox: string, maxFeePerGas: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        perform(_inbox: string, _nativeToken: string, _maxFeePerGas: BigNumberish, overrides?: PayableOverrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
    };
}
