"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IEthRollupCreator__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "confirmPeriodBlocks",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "extraChallengeTimeBlocks",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "stakeToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "baseStake",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "wasmModuleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "loserStakeEscrow",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "chainId",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "chainConfig",
                        type: "string",
                    },
                    {
                        internalType: "uint64",
                        name: "genesisBlockNum",
                        type: "uint64",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "delayBlocks",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "futureBlocks",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "delaySeconds",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "futureSeconds",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct ISequencerInbox.MaxTimeVariation",
                        name: "sequencerInboxMaxTimeVariation",
                        type: "tuple",
                    },
                ],
                internalType: "struct Config",
                name: "config",
                type: "tuple",
            },
        ],
        name: "createRollup",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IBridgeCreator",
                name: "_bridgeCreator",
                type: "address",
            },
            {
                internalType: "contract IOneStepProofEntry",
                name: "_osp",
                type: "address",
            },
            {
                internalType: "contract IChallengeManager",
                name: "_challengeManagerLogic",
                type: "address",
            },
            {
                internalType: "contract IRollupAdmin",
                name: "_rollupAdminLogic",
                type: "address",
            },
            {
                internalType: "contract IRollupUser",
                name: "_rollupUserLogic",
                type: "address",
            },
            {
                internalType: "address",
                name: "_validatorUtils",
                type: "address",
            },
            {
                internalType: "address",
                name: "_validatorWalletCreator",
                type: "address",
            },
        ],
        name: "setTemplates",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IEthRollupCreator__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IEthRollupCreator__factory = IEthRollupCreator__factory;
IEthRollupCreator__factory.abi = _abi;
